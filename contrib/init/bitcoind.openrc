#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/miguelkoin/.miguelkoin" ]; then
	MIGUELKOIND_DEFAULT_DATADIR="/var/lib/miguelkoin/.miguelkoin"
else
	MIGUELKOIND_DEFAULT_DATADIR="/var/lib/miguelkoind"
fi

MIGUELKOIND_CONFIGFILE=${MIGUELKOIND_CONFIGFILE:-/etc/miguelkoin/miguelkoin.conf}
MIGUELKOIND_PIDDIR=${MIGUELKOIND_PIDDIR:-/var/run/miguelkoind}
MIGUELKOIND_PIDFILE=${MIGUELKOIND_PIDFILE:-${MIGUELKOIND_PIDDIR}/miguelkoind.pid}
MIGUELKOIND_DATADIR=${MIGUELKOIND_DATADIR:-${MIGUELKOIND_DEFAULT_DATADIR}}
MIGUELKOIND_USER=${MIGUELKOIND_USER:-${MIGUELKOIN_USER:-miguelkoin}}
MIGUELKOIND_GROUP=${MIGUELKOIND_GROUP:-miguelkoin}
MIGUELKOIND_BIN=${MIGUELKOIND_BIN:-/usr/bin/miguelkoind}
MIGUELKOIND_NICE=${MIGUELKOIND_NICE:-${NICELEVEL:-0}}
MIGUELKOIND_OPTS="${MIGUELKOIND_OPTS:-${MIGUELKOIN_OPTS}}"

name="Miguelkoin Core Daemon"
description="Miguelkoin cryptocurrency P2P network daemon"

command="/usr/bin/miguelkoind"
command_args="-pid=\"${MIGUELKOIND_PIDFILE}\" \
		-conf=\"${MIGUELKOIND_CONFIGFILE}\" \
		-datadir=\"${MIGUELKOIND_DATADIR}\" \
		-daemon \
		${MIGUELKOIND_OPTS}"

required_files="${MIGUELKOIND_CONFIGFILE}"
start_stop_daemon_args="-u ${MIGUELKOIND_USER} \
			-N ${MIGUELKOIND_NICE} -w 2000"
pidfile="${MIGUELKOIND_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${MIGUELKOIND_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${MIGUELKOIND_USER}:${MIGUELKOIND_GROUP}" \
	"${MIGUELKOIND_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${MIGUELKOIND_USER}:${MIGUELKOIND_GROUP}" \
	"${MIGUELKOIND_PIDDIR}"

	checkpath -f \
	-o ${MIGUELKOIND_USER}:${MIGUELKOIND_GROUP} \
	-m 0660 \
	${MIGUELKOIND_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${MIGUELKOIND_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run miguelkoind."
		eerror "The setting must appear in ${MIGUELKOIND_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Miguelkoin Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
